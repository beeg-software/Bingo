@using Bingo.UI.Shared.UIElements.Input
@using Bingo.Common.DomainModel.Setup

<!-- Check if the SessionSector object is null, display a loading message if true -->
@if (sese == null)
{
    <span>Getting data...</span>
}
else
{
    <!-- Create an EditForm with the SessionSector object as the model and handle submission with the HandleValidSubmit method -->
    <EditForm Model="@sese" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="container">
            <div class="row mb-3">
                <div class="col-md-6">
                    <MudTextField @bind-Value="sese.Id" Label="Id" ReadOnly="true" Variant="Variant.Filled" />
                </div>
            </div>
            <div class="row mb-4">
                <div class="col-md-6">
                    <MudAutocomplete T="Session" Label="Session" @bind-Value="LocalSession" SearchFunc="@SearchSession" ToStringFunc="@(e=> e==null?null : $"{e.Name}")" Variant="Variant.Outlined" />
                </div>
                <div class="col-md-6">
                    <MudAutocomplete T="Sector" Label="Sector" @bind-Value="LocalSector" SearchFunc="@SearchSector" ToStringFunc="@(e=> e==null?null : $"{e.Name}")" Variant="Variant.Outlined" />

                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <MudCheckBox @bind-Checked="@sese.RaceEnabled" Label="RaceEnabled" Color="Color.Primary"></MudCheckBox>
                </div>
            </div>
            <!-- Save button -->
            <div class="row">
                <div class="col-md-6">
                    <button type="submit" class="btn btn-primary mt-3">Save</button>
                </div>
            </div>
        </div>
    </EditForm>
}